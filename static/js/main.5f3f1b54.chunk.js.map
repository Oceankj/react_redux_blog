{"version":3,"sources":["component/components.js","util.js","redux/WebAPI.js","redux/reducers/userReducer.js","component/NavBar.jsx","page/NewPostPage/NewPostPage.jsx","component/post.jsx","redux/reducers/postsReducer.js","page/HomePage/HomePage.jsx","page/LoginPage/LoginPage.jsx","page/RegisterPage/RegisterPage.jsx","page/AboutPage/AboutPage.jsx","page/ArticlePage/ArticlePage.jsx","page/EditPage/EditPage.jsx","page/EditSinglePostPage/EditSinglePostPage.jsx","page/DeletePostPage/DeletePostPage.jsx","App.jsx","redux/store.js","index.jsx"],"names":["Loading","styled","div","ErrorMessage","p","props","errorMessage","NavBarWrapper","Nav","Link","NavWrapper","Button","button","Title","ArticleWrapper","ArticleTitle","ArticleContent","PostsContain","PostContainer","PostTime","PostTitle","PostHr","PageBar","EditButtonContainer","PostEditButton","Page","LogInContent","LogInTitle","FormContent","Form","form","LogInButton","NewWrapper","ArticleInputTitle","input","NewArticleContent","textarea","SubmitContent","Submit","RegisterContent","Subtitle","RegisterFormContent","RegisterInput","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","userReducer","createSlice","name","initialState","isLoading","userId","status","reducers","setIsLoading","state","action","payload","setUser","setErrorMessage","setStatus","logIn","username","password","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","logInAPI","data","ok","message","getMe","authorization","catch","console","log","getMeAPI","id","toString","register","nickName","userName","nickname","registerAPI","createPost","title","createPostAPI","updatePost","updatePostAPI","deletePost","deletePostAPI","actions","selectUser","user","App","useSelector","history","useHistory","location","useLocation","useDispatch","authToken","useEffect","to","onClick","pathname","push","NewPostPage","useState","setTitle","content","setContent","userStore","sendStatus","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","cols","rows","Post","post","page","Date","createdAt","toLocaleString","postsReducer","isLoadingList","totalOfPage","singlePost","setPosts","setTotalOfPage","setId","setSinglePost","getPosts","listOfPage","Math","ceil","length","i","getCertainUserPost","getCertainUserPostAPI","posts","getSinglePost","getSinglePostAPI","selectPost","HomePage","store","currentPage","setCurrentPage","listOfArticle","setListOfArticle","ItemToPush","limit","list","handleChangePage","innerText","map","LogInPage","setUserName","setPassword","RegistertPage","setNickName","checkPassword","setCheckPassword","registerStatus","AboutPage","SingleArticlePage","useParams","SinglePost","EditPage","postsStore","EditSingPostPage","updateStatus","DeletePostPage","deleteStatus","exact","path","EditSinglePostPage","configureStore","reducer","postReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f3f1b54.chunk.js","sourcesContent":["/* eslint-disable import/no-unresolved */\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Loading = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  padding-top: 100px;\n  left: 0px;\n  top: 0px;\n  text-align: center;\n  background-color: #45454561;\n  color: #ffffff5c;\n  font-size: 50px;\n`;\n\nexport const ErrorMessage = styled.p`\n  color: red;\n  ${props => (props.errorMessage ? 'visiblity:visible;' : 'visiblity:hidden;')}\n`;\n\nexport const NavBarWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 0px auto;\n  max-width: 1000px;\n  position: fixed;\n  top: 0px;\n  right: 0px;\n  left: 0px;\n  background-color: white;\n  border-bottom: 1px solid black;\n`;\n\nexport const Nav = styled(Link)`\n  & + & {\n    margin-left: 10px;\n  }\n`;\n\nexport const NavWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n`;\n\nexport const Title = styled.p`\n  display: inline-flex;\n  font-size: 30px;\n  vertical-align: middle;\n  margin: 0px 27px 0px 0px;\n`;\n\nexport const ArticleWrapper = styled.div`\n  display: block;\n  margin: 70px auto;\n  max-width: 1000px;\n`;\n\nexport const ArticleTitle = styled.p`\n  font-size: 25px;\n`;\n\nexport const ArticleContent = styled.p`\n  word-break: break-all;\n  white-space: break-spaces;\n`;\n\nexport const PostsContain = styled.div`\n  display: block;\n  margin: 60px auto;\n  max-width: 1000px;\n`;\n\nexport const PostContainer = styled(Link)`\n  display: flex;\n  padding: 0px 40px;\n  align-items: flex-end;\n  justify-content: space-between;\n  border-radius: 5px;\n  color: #555;\n  text-decoration: none;\n  :hover {\n    background-color: #80808047;\n  }\n`;\n\nexport const PostTime = styled.p`\n  display: flex;\n`;\n\nexport const PostTitle = styled.p`\n  display: inline-block;\n  text-overflow: ellipsis;\n  width: 690px;\n  height: 24px;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport const PostHr = styled.div`\n  display: flex;\n  margin: auto;\n  padding: 0px;\n  border-bottom: 1px solid #8080801f;\n  width: 918px;\n`;\n\nexport const PageBar = styled.div`\n  display: flex;\n  margin-top: 20px;\n  justify-content: center;\n`;\n\nexport const EditButtonContainer = styled.div`\n  text-align: center;\n  margin: 10px 0px;\n`;\n\nexport const PostEditButton = styled(Link)`\n  margin: 30px;\n  text-align: end;\n  background: #efefef;\n  border: 1px solid #767676;\n  padding: 5px 10px;\n  border-radius: 5px;\n  color: #555;\n  text-decoration: none;\n  :hover {\n    background-color: #80808047;\n  }\n`;\n\nexport const Page = styled.div`\n  margin: 8px;\n  padding: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  :hover {\n    background: #8080808f;\n    color: white;\n  }\n`;\n\nexport const LogInContent = styled.div`\n  display: block;\n  justify-item: space-between;\n  margin-top: 100px;\n`;\n\nexport const LogInTitle = styled.p`\n  display: block;\n  font-size: 30px;\n  text-align: center;\n`;\n\nexport const FormContent = styled.div`\n  display: flex;\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  margin: 0px auto;\n  min-width: 400px;\n`;\n\nexport const LogInButton = styled.button`\n  margin-top: 30px;\n`;\n\nexport const NewWrapper = styled.div`\n  display: block;\n  margin: 70px auto;\n  max-width: 1000px;\n`;\n\nexport const ArticleInputTitle = styled.input`\n  width: 292px;\n  height: 24px;\n`;\n\nexport const NewArticleContent = styled.textarea`\n  margin-top: 15px;\n  resize: none;\n`;\n\nexport const SubmitContent = styled.div`\n  margin: 10px;\n  text-align: end;\n`;\n\nexport const Submit = styled.button`\n  display: inline-block;\n  padding: 5px 45px;\n  & + & {\n    margin-left: 10px;\n  }\n`;\n\nexport const RegisterContent = styled.div`\n  display: block;\n  justify-item: space-between;\n  margin-top: 100px;\n`;\n\nexport const Subtitle = styled.p`\n  display: inline-block;\n`;\n\nexport const RegisterFormContent = styled.div`\n  display: flex;\n  text-align: right;\n`;\n\nexport const RegisterInput = styled.input`\n  margin-right: 80px;\n  margin-left: 20px;\n`;\n","const TOKEN_NAME = 'token';\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME);\n","const BASE_URL = 'https://student-json-api.lidemy.me';\n\nexport const getPosts = () => fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then(res => res.json());\n\nexport const getCertainUserPost = userId => fetch(`${BASE_URL}/users/${userId}?_embed=posts`).then(res => res.json());\n\nexport const getSinglePost = id => fetch(`${BASE_URL}/posts?id=${id}`).then(res => res.json());\n\nexport const logIn = (username, password) => fetch(`${BASE_URL}/login`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    username,\n    password,\n  }),\n}).then(res => res.json());\n\nexport const register = (nickname, username, password) => fetch(`${BASE_URL}/register`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    nickname,\n    username,\n    password,\n  }),\n}).then(res => res.json());\n\nexport const getMe = token => fetch(`${BASE_URL}/me`, {\n  headers: {\n    authorization: `Bearer ${token}`,\n  },\n})\n  .then(res => res.json())\n  .catch((res) => {\n    console.log(res);\n  });\n\nexport const createPost = (title, body, token) => fetch(`${BASE_URL}/posts`, {\n  method: 'POST',\n  headers: {\n    authorization: `Bearer ${token}`,\n    'content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    title,\n    body,\n  }),\n}).then(res => res.json());\n\nexport const updatePost = (token, id, title, body) => fetch(`${BASE_URL}/posts/${id}`, {\n  method: 'PATCH',\n  headers: {\n    authorization: `Bearer ${token}`,\n    'content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    title,\n    body,\n  }),\n}).then(res => res.json());\n\nexport const deletePost = (token, id) => fetch(`${BASE_URL}/posts/${id}`, {\n  method: 'DELETE',\n  headers: {\n    authorization: `Bearer ${token}`,\n    'content-Type': 'application/json',\n  },\n}).then(res => res.json());\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable no-use-before-define */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable no-param-reassign */\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  logIn as logInAPI,\n  register as registerAPI,\n  getMe as getMeAPI,\n  createPost as createPostAPI,\n  updatePost as updatePostAPI,\n  deletePost as deletePostAPI,\n} from \"../WebAPI\";\nimport { setAuthToken } from \"../../util\";\n\nexport const userReducer = createSlice({\n  name: \"user\",\n  initialState: {\n    isLoading: false,\n    userId: null,\n    errorMessage: \"error\",\n    status: null,\n  },\n  reducers: {\n    setIsLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n    setUser: (state, action) => {\n      state.userId = action.payload;\n    },\n    setErrorMessage: (state, action) => {\n      state.errorMessage = action.payload;\n    },\n    setStatus: (state, action) => {\n      state.status = action.payload;\n    },\n  },\n});\n\nexport const logIn = (username, password) => (dispatch) => {\n  dispatch(setIsLoading(true));\n  logInAPI(username, password).then((data) => {\n    dispatch(setErrorMessage(\"\"));\n    data.ok === 0\n      ? dispatch(setErrorMessage(data.message))\n      : setAuthToken(data.token);\n    dispatch(setIsLoading(false));\n    return data;\n  });\n};\n\nexport const getMe = (token) => (dispatch) => {\n  getMeAPI(token)\n    .then((res) => {\n      res.ok === 1 && dispatch(setUser(res.data.id));\n      return res;\n    })\n    .then((res) => {\n      if (res.ok !== 1) {\n        setAuthToken(null);\n        dispatch(setErrorMessage(res.toString()));\n      }\n      return res;\n    });\n};\n\nexport const register = (nickName, userName, password) => (dispatch) => {\n  dispatch(setIsLoading(true));\n  dispatch(setStatus(\"\"));\n  registerAPI(nickName, userName, password)\n    .then((data) => {\n      data.ok === 0 && dispatch(setErrorMessage(data.message));\n      return data;\n    })\n    .then((data) => {\n      if (data.ok !== 0) {\n        setAuthToken(data.token);\n        dispatch(setStatus(\"ok\"));\n      }\n    });\n  dispatch(setIsLoading(false));\n};\n\nexport const createPost = (title, body, token) => (dispatch) => {\n  dispatch(setIsLoading(true));\n  dispatch(setStatus(\"\"));\n  createPostAPI(title, body, token)\n    .then((res) => {\n      res.title && dispatch(setStatus(\"ok\"));\n      return res;\n    })\n    .then((res) => dispatch(setErrorMessage(res.message)));\n  dispatch(setIsLoading(false));\n};\n\nexport const updatePost = (token, id, title, body) => (dispatch) => {\n  dispatch(setIsLoading(true));\n  dispatch(setStatus(\"\"));\n  updatePostAPI(token, id, title, body)\n    .then((res) => {\n      res.title && dispatch(setStatus(\"ok\"));\n      return res;\n    })\n    .then((res) => dispatch(setErrorMessage(res.message)));\n  dispatch(setIsLoading(false));\n};\n\nexport const deletePost = (token, id) => (dispatch) => {\n  dispatch(setStatus(\"\"));\n  dispatch(setIsLoading(true));\n  return deletePostAPI(token, id).then(() => {\n    dispatch(setStatus(\"ok\"));\n    dispatch(setIsLoading(false));\n  });\n};\n\nexport const {\n  setIsLoading,\n  setUser,\n  setErrorMessage,\n  setStatus,\n} = userReducer.actions;\nexport const selectUser = (state) => state.user;\nexport default userReducer.reducer;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable import/no-unresolved */\nimport { useHistory, useLocation } from 'react-router-dom';\nimport React, { useEffect, Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  NavBarWrapper, NavWrapper, Title, Nav, Button,\n} from './components';\nimport { setAuthToken, getAuthToken } from '../util';\nimport { setUser, selectUser, getMe } from '../redux/reducers/userReducer';\n\nexport default function App() {\n  const userStore = useSelector(selectUser);\n  const user = userStore.userId;\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const authToken = getAuthToken();\n\n  useEffect(() => {\n    if (authToken) {\n      dispatch(getMe(authToken));\n    }\n  }, [authToken, dispatch, user]);\n\n  const handleLogOut = () => {\n    setAuthToken('');\n    dispatch(setUser(null));\n    if (location.pathname !== '/') {\n      history.push('/');\n    }\n  };\n\n  return (\n    <NavBarWrapper>\n      <NavWrapper>\n        <Title>部落格</Title>\n        <Nav to=\"/\">\n          <Button>首頁</Button>\n        </Nav>\n        <Nav to=\"/about\">\n          <Button>關於我</Button>\n        </Nav>\n        {user && (\n          <>\n            <Nav to=\"/new_post\">\n              <Button>新增文章</Button>\n            </Nav>\n            <Nav to=\"/edit\">\n              <Button>編輯文章</Button>\n            </Nav>\n          </>\n        )}\n      </NavWrapper>\n      <NavWrapper>\n        {!user && (\n          <Nav to=\"/login\">\n            <Button>登入</Button>\n          </Nav>\n        )}\n        {!user && (\n          <Nav to=\"/registert\">\n            <Button>註冊</Button>\n          </Nav>\n        )}\n        {user && (\n          <div>\n            <Button onClick={handleLogOut}>登出</Button>\n          </div>\n        )}\n      </NavWrapper>\n    </NavBarWrapper>\n  );\n}\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable import/no-unresolved */\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  createPost,\n  selectUser,\n  setErrorMessage,\n  setStatus,\n} from '../../redux/reducers/userReducer';\nimport {\n  Loading,\n  ErrorMessage,\n  NewWrapper,\n  ArticleTitle,\n  ArticleInputTitle,\n  NewArticleContent,\n  SubmitContent,\n  Submit,\n} from '../../component/components';\nimport { getAuthToken } from '../../util';\n\nfunction NewPostPage() {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const userStore = useSelector(selectUser);\n  const { errorMessage } = userStore;\n  const { isLoading } = userStore;\n  const sendStatus = userStore.status;\n  const token = getAuthToken();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  const handleContentChange = (e) => {\n    setContent(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(createPost(title, content, token));\n  };\n\n  useEffect(() => {\n    !token && history.push('/');\n    sendStatus === 'ok' && history.push('/');\n    dispatch(setStatus(''));\n    dispatch(setErrorMessage(''));\n  }, [token, sendStatus, history, dispatch]);\n\n  return (\n    <NewWrapper>\n      {isLoading && <Loading>loading</Loading>}\n      <div>\n        <form onSubmit={handleSubmit}>\n          <ArticleTitle>新增文章</ArticleTitle>\n          <ArticleInputTitle\n            type=\"text\"\n            placeholder=\"輸入標題\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <NewArticleContent\n            cols=\"110\"\n            rows=\"20\"\n            placeholder=\"輸入內容\"\n            value={content}\n            onChange={handleContentChange}\n          />\n          <SubmitContent>\n            <Submit>送出</Submit>\n          </SubmitContent>\n          <ErrorMessage errorMessage={errorMessage}>\n            {errorMessage}\n          </ErrorMessage>\n        </form>\n      </div>\n    </NewWrapper>\n  );\n}\nexport default NewPostPage;\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable no-unused-vars */\n/* eslint-disable import/no-unresolved */\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PostContainer,\n  PostTitle,\n  PostTime,\n  PostEditButton,\n  EditButtonContainer,\n} from './components';\n\nexport default function Post({ post, page }) {\n  return (\n    <>\n      <PostContainer to={`/article/${post.id}`}>\n        <PostTitle>{post.title}</PostTitle>\n        <PostTime>{new Date(post.createdAt).toLocaleString()}</PostTime>\n      </PostContainer>\n      {page === 'edit' && (\n        <EditButtonContainer>\n          <PostEditButton to={`/edit_post/${post.id}`}>編輯</PostEditButton>\n          <PostEditButton to={`/delete/${post.id}`}>刪除</PostEditButton>\n        </EditButtonContainer>\n      )}\n    </>\n  );\n}\nPost.propTypes = {\n  post: PropTypes.object,\n  page: PropTypes.string,\n};\n","/* eslint-disable no-use-before-define */\n/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-unresolved */\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  getPosts as getPostsAPI,\n  getSinglePost as getSinglePostAPI,\n  getCertainUserPost as getCertainUserPostAPI,\n} from '../WebAPI';\n\nconst postsReducer = createSlice({\n  name: 'posts',\n  initialState: {\n    isLoadingList: false,\n    totalOfPage: [],\n    post: [],\n    id: null,\n    singlePost: [],\n  },\n  reducers: {\n    setIsLoading: (state, action) => {\n      state.isLoadingList = action.payload;\n    },\n    setPosts: (state, action) => {\n      state.post = action.payload;\n    },\n    setTotalOfPage: (state, action) => {\n      state.totalOfPage = action.payload;\n    },\n    setId: (state, action) => {\n      state.id = action.payload;\n    },\n    setSinglePost: (state, action) => {\n      state.singlePost = action.payload;\n    },\n  },\n});\n\nexport const getPosts = () => (dispatch) => {\n  dispatch(setIsLoading(true));\n  getPostsAPI().then((res) => {\n    const listOfPage = [];\n    const page = Math.ceil(res.length / 10);\n    for (let i = 1; i <= page; i += 1) {\n      listOfPage.push(i);\n    }\n    dispatch(setPosts(res));\n    dispatch(setTotalOfPage(listOfPage));\n    dispatch(setIsLoading(false));\n  });\n};\n\nexport const getCertainUserPost = userId => (dispatch) => {\n  dispatch(setIsLoading(true));\n  getCertainUserPostAPI(userId).then((res) => {\n    dispatch(setPosts([]));\n    const listOfPage = [];\n    if (res.posts.length !== 0) {\n      const page = Math.ceil(res.posts.length / 10);\n      for (let i = 1; i <= page; i += 1) {\n        listOfPage.push(i);\n      }\n      dispatch(setPosts(res.posts));\n    }\n    dispatch(setTotalOfPage(listOfPage));\n    dispatch(setIsLoading(false));\n  });\n};\n\nexport const getSinglePost = id => (dispatch) => {\n  dispatch(setIsLoading(true));\n  getSinglePostAPI(id).then((res) => {\n    dispatch(setSinglePost(res));\n    dispatch(setIsLoading(false));\n  });\n};\n\nexport const {\n  setIsLoading,\n  setPosts,\n  setTotalOfPage,\n  setSinglePost,\n} = postsReducer.actions;\nexport const selectPost = state => state.posts;\nexport default postsReducer.reducer;\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react/require-default-props */\n/* eslint-disable import/no-unresolved */\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Loading,\n  PostsContain,\n  PostHr,\n  PageBar,\n  Page,\n} from '../../component/components';\nimport Post from '../../component/post';\nimport { getPosts } from '../../redux/reducers/postsReducer';\n\nfunction HomePage() {\n  const isLoadingList = useSelector(store => store.posts.isLoadingList);\n  const totalOfPage = useSelector(store => store.posts.totalOfPage);\n  const posts = useSelector(store => store.posts.post);\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [listOfArticle, setListOfArticle] = useState([]);\n\n  useEffect(()=>{dispatch(getPosts());\n  },[dispatch])\n\n  useEffect(() => {\n    if (posts) {\n      const limitPerPage = 10;\n      let ItemToPush = (currentPage - 1) * 10;\n      const limit = ItemToPush + limitPerPage;\n      const list = [];\n      while (ItemToPush < limit && posts[ItemToPush]) {\n        list.push(posts[ItemToPush]);\n        ItemToPush += 1;\n      }\n      setListOfArticle(list);\n    }\n  }, [currentPage, posts]);\n\n  const handleChangePage = (page) => {\n    setCurrentPage(page.target.innerText);\n  };\n\n  return (\n    <PostsContain>\n      {isLoadingList && <Loading>loading</Loading>}\n      {listOfArticle\n        && listOfArticle.map(post => (\n          <div key={post.id}>\n            <Post post={post} page=\"home\" />\n            <PostHr />\n          </div>\n        ))}\n      <PageBar>\n        {totalOfPage\n          && totalOfPage.map(page => (\n            <Page key={page} onClick={handleChangePage}>{page}</Page>\n          ))}\n      </PageBar>\n    </PostsContain>\n  );\n}\n\nexport default HomePage;\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable consistent-return */\n/* eslint-disable import/no-unresolved */\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAuthToken } from '../../util';\nimport {\n  logIn,\n  setErrorMessage,\n  selectUser,\n} from '../../redux/reducers/userReducer';\nimport {\n  Loading,\n  ErrorMessage,\n  LogInContent,\n  LogInTitle,\n  FormContent,\n  Form,\n  LogInButton,\n} from '../../component/components';\n\nfunction LogInPage() {\n  const userStore = useSelector(selectUser);\n  const { isLoading } = userStore;\n  const { errorMessage } = userStore;\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const authToken = getAuthToken();\n\n  useEffect(() => {\n    dispatch(setErrorMessage('此為作業用，密碼皆為Lidemy'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    authToken && history.push('/');\n  }, [authToken, history]);\n\n  const handleSumit = (e) => {\n    e.preventDefault();\n    dispatch(logIn(userName, password));\n    setUserName('');\n    setPassword('');\n  };\n\n  return (\n    <LogInContent>\n      {isLoading && <Loading>loading</Loading>}\n      <LogInTitle>登入頁面</LogInTitle>\n      <FormContent>\n        <Form onSubmit={handleSumit}>\n          <div>\n            <p>username : </p>\n            <input\n              type=\"text\"\n              value={userName}\n              onChange={(e) => {\n                setUserName(e.target.value);\n              }}\n            />\n            <p>password : </p>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n          </div>\n          <LogInButton>登入</LogInButton>\n          <ErrorMessage errorMessage={errorMessage}>\n            {errorMessage}\n          </ErrorMessage>\n        </Form>\n      </FormContent>\n    </LogInContent>\n  );\n}\n\nexport default LogInPage;\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable consistent-return */\n/* eslint-disable import/no-unresolved */\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  RegisterContent,\n  Loading,\n  LogInTitle,\n  RegisterFormContent,\n  Form,\n  Subtitle,\n  RegisterInput,\n  LogInButton,\n  ErrorMessage,\n} from '../../component/components';\nimport {\n  register,\n  selectUser,\n  setStatus,\n  setErrorMessage,\n} from '../../redux/reducers/userReducer';\nimport { getAuthToken } from '../../util';\n\nfunction RegistertPage() {\n  const [nickName, setNickName] = useState('');\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [checkPassword, setCheckPassword] = useState('');\n  const history = useHistory();\n  const userStore = useSelector(selectUser);\n  const registerStatus = userStore.status;\n  const { errorMessage } = userStore;\n  const { isLoading } = userStore;\n  const token = getAuthToken();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    token && history.push('/');\n    registerStatus === 'ok' && history.push('/');\n    dispatch(setStatus(''));\n    dispatch(setErrorMessage(''));\n  }, [token, registerStatus, history, dispatch]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(setErrorMessage(''));\n    if (password !== checkPassword) {\n      return dispatch(setErrorMessage('plaese confirm your password'));\n    }\n    dispatch(register(nickName, userName, password));\n  };\n\n  return (\n    <RegisterContent>\n      {isLoading && <Loading>loading</Loading>}\n      <LogInTitle>註冊頁面</LogInTitle>\n      <RegisterFormContent>\n        <Form onSubmit={handleSubmit}>\n          <div>\n            <div>\n              <Subtitle>nick name : </Subtitle>\n              <RegisterInput\n                type=\"text\"\n                value={nickName}\n                onChange={(e) => {\n                  setNickName(e.target.value);\n                }}\n              />\n            </div>\n            <div>\n              <Subtitle>user name : </Subtitle>\n              <RegisterInput\n                type=\"text\"\n                value={userName}\n                onChange={(e) => {\n                  setUserName(e.target.value);\n                }}\n              />\n            </div>\n            <div>\n              <Subtitle>password : </Subtitle>\n              <RegisterInput\n                type=\"password\"\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n              />\n            </div>\n            <div>\n              <Subtitle>comfirm your password : </Subtitle>\n              <RegisterInput\n                type=\"password\"\n                value={checkPassword}\n                onChange={(e) => {\n                  setCheckPassword(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <LogInButton>註冊</LogInButton>\n          <ErrorMessage errorMessage={errorMessage}>\n            {errorMessage}\n          </ErrorMessage>\n        </Form>\n      </RegisterFormContent>\n    </RegisterContent>\n  );\n}\n\nexport default RegistertPage;\n","/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport {\n  ArticleWrapper,\n  ArticleTitle,\n  ArticleContent,\n} from '../../component/components';\n\nfunction AboutPage() {\n  return (\n    <ArticleWrapper>\n      <div>\n        <ArticleTitle>關於我</ArticleTitle>\n      </div>\n      <ArticleContent>嗨嗨嗨嗨嗨嗨你好啊</ArticleContent>\n    </ArticleWrapper>\n  );\n}\n\nexport default AboutPage;\n","/* eslint-disable import/no-unresolved */\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  ArticleWrapper,\n  ArticleTitle,\n  ArticleContent,\n  Loading,\n} from '../../component/components';\nimport { getSinglePost } from '../../redux/reducers/postsReducer';\n\nfunction SingleArticlePage() {\n  const { id } = useParams();\n  const isLoading = useSelector(store => store.posts.isLoading);\n  const SinglePost = useSelector(store => store.posts.singlePost[0]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getSinglePost(id));\n  }, [dispatch, id]);\n\n  return (\n    <ArticleWrapper>\n      {isLoading && <Loading>loading</Loading>}\n      <div>\n        <ArticleTitle>{SinglePost && SinglePost.title}</ArticleTitle>\n        <p>{SinglePost && new Date(SinglePost.createdAt).toLocaleString()}</p>\n      </div>\n      <ArticleContent>{SinglePost && SinglePost.body}</ArticleContent>\n    </ArticleWrapper>\n  );\n}\n\nexport default SingleArticlePage;\n","/* eslint-disable import/named */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react/require-default-props */\n/* eslint-disable import/no-unresolved */\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Loading,\n  PostsContain,\n  PostHr,\n  PageBar,\n  Page,\n} from '../../component/components';\nimport Post from '../../component/post';\nimport {\n  getCertainUserPost,\n  selectPost,\n} from '../../redux/reducers/postsReducer';\nimport { getMe, selectUser } from '../../redux/reducers/userReducer';\nimport { getAuthToken } from '../../util';\n\nfunction EditPage() {\n  const postsStore = useSelector(selectPost);\n  const userStore = useSelector(selectUser);\n  const { isLoadingList } = postsStore;\n  const { totalOfPage } = postsStore;\n  const posts = postsStore.post;\n  const { userId } = userStore;\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [listOfArticle, setListOfArticle] = useState([]);\n  const authToken = getAuthToken();\n\n  useEffect(() => {\n    dispatch(getMe(authToken));\n  }, [dispatch, authToken]);\n\n  useEffect(() => {\n    if (userId) {\n      dispatch(getCertainUserPost(userId));\n    }\n  }, [dispatch, userId]);\n\n  useEffect(() => {\n    const limitPerPage = 10;\n    let ItemToPush = (currentPage - 1) * 10;\n    const limit = ItemToPush + limitPerPage;\n    const list = [];\n    if (posts) {\n      while (ItemToPush < limit && posts[ItemToPush]) {\n        list.push(posts[ItemToPush]);\n        ItemToPush += 1;\n      }\n      setListOfArticle(list);\n    }\n  }, [currentPage, posts]);\n\n  const handleChangePage = (page) => {\n    setCurrentPage(page.target.innerText);\n  };\n\n  return (\n    <PostsContain>\n      {isLoadingList && <Loading>loading</Loading>}\n      {listOfArticle.length !== 0 ? (\n        listOfArticle.map(post => (\n          <div key={post.id}>\n            <Post post={post} page=\"edit\" />\n            <PostHr />\n          </div>\n        ))\n      ) : (\n        <h1>還沒有文章喔！</h1>\n      )}\n      <PageBar>\n        {totalOfPage.length !== 0\n          && totalOfPage.map(page => (\n            <Page key={page} onClick={handleChangePage}>{page}</Page>\n          ))}\n      </PageBar>\n    </PostsContain>\n  );\n}\n\nexport default EditPage;\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectUser,\n  updatePost,\n  deletePost,\n  setErrorMessage,\n  setStatus,\n} from '../../redux/reducers/userReducer';\nimport { selectPost, getSinglePost } from '../../redux/reducers/postsReducer';\nimport {\n  Loading,\n  ErrorMessage,\n  NewWrapper,\n  ArticleTitle,\n  ArticleInputTitle,\n  NewArticleContent,\n  SubmitContent,\n  Submit,\n} from '../../component/components';\nimport { getAuthToken } from '../../util';\n\nfunction EditSingPostPage() {\n  const { id } = useParams();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const userStore = useSelector(selectUser);\n  const postStore = useSelector(selectPost);\n  const SinglePost = postStore.singlePost[0];\n  const { errorMessage } = userStore;\n  const { isLoading } = userStore;\n  const updateStatus = userStore.status;\n  const authToken = getAuthToken();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  const handleContentChange = (e) => {\n    setContent(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updatePost(authToken, id, title, content));\n  };\n  const handleDelete = (e) => {\n    e.preventDefault();\n    dispatch(deletePost(authToken, id));\n  };\n\n  useEffect(() => {\n    !authToken && history.push('/');\n    updateStatus === 'ok' && history.push('/');\n    dispatch(setStatus(''));\n    dispatch(setErrorMessage(''));\n    dispatch(getSinglePost(id));\n  }, [authToken, updateStatus, history, dispatch, id]);\n\n  useEffect(() => {\n    if (SinglePost) {\n      setTitle(SinglePost.title);\n      setContent(SinglePost.body);\n    }\n  }, [SinglePost]);\n\n  return (\n    <NewWrapper>\n      {isLoading && <Loading>loading</Loading>}\n      <div>\n        <form>\n          <ArticleTitle>編輯文章</ArticleTitle>\n          <ArticleInputTitle\n            type=\"text\"\n            placeholder=\"輸入標題\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <NewArticleContent\n            cols=\"110\"\n            rows=\"20\"\n            placeholder=\"輸入內容\"\n            value={content}\n            onChange={handleContentChange}\n          />\n          <SubmitContent>\n            <Submit onClick={handleDelete}>刪除</Submit>\n            <Submit onClick={handleSubmit}>送出</Submit>\n          </SubmitContent>\n          <ErrorMessage errorMessage={errorMessage}>\n            {errorMessage}\n          </ErrorMessage>\n        </form>\n      </div>\n    </NewWrapper>\n  );\n}\nexport default EditSingPostPage;\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectUser,\n  deletePost,\n  setStatus,\n} from \"../../redux/reducers/userReducer\";\nimport { Loading, ErrorMessage, NewWrapper } from \"../../component/components\";\nimport { getAuthToken } from \"../../util\";\n\nfunction DeletePostPage() {\n  const { id } = useParams();\n  const userStore = useSelector(selectUser);\n  const deleteStatus = userStore.status;\n  const { errorMessage } = userStore;\n  const { isLoading } = userStore;\n  const authToken = getAuthToken();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    !authToken && history.push(\"/\");\n    dispatch(setStatus(\"\"));\n    dispatch(deletePost(authToken, id)).then(() => {\n      history.push(\"/\");\n    });\n  }, [authToken, deleteStatus, history, dispatch, id]);\n\n  return (\n    <NewWrapper>\n      {isLoading && <Loading>loading</Loading>}\n      <div>\n        <form>\n          <ErrorMessage errorMessage={errorMessage}>\n            {errorMessage}\n          </ErrorMessage>\n        </form>\n      </div>\n    </NewWrapper>\n  );\n}\nexport default DeletePostPage;\n","/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport NavBar from './component/NavBar';\nimport NewPostPage from './page/NewPostPage';\nimport HomePage from './page/HomePage';\nimport LogInPage from './page/LoginPage';\nimport RegistertPage from './page/RegisterPage';\nimport AboutPage from './page/AboutPage';\nimport SingleArticlePage from './page/ArticlePage';\nimport EditPage from './page/EditPage';\nimport EditSinglePostPage from './page/EditSinglePostPage';\nimport DeletePostPage from './page/DeletePostPage';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/login\">\n            <LogInPage />\n          </Route>\n          <Route path=\"/new_post\">\n            <NewPostPage />\n          </Route>\n          <Route exact path=\"/registert\">\n            <RegistertPage />\n          </Route>\n          <Route exact path=\"/about\">\n            <AboutPage />\n          </Route>\n          <Route path=\"/article/:id\">\n            <SingleArticlePage />\n          </Route>\n          <Route path=\"/edit\">\n            <EditPage />\n          </Route>\n          <Route path=\"/edit_post/:id\">\n            <EditSinglePostPage />\n          </Route>\n          <Route path=\"/delete/:id\">\n            <DeletePostPage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-unresolved */\nimport { configureStore } from '@reduxjs/toolkit';\nimport postReducer from './reducers/postsReducer';\nimport userReducer from './reducers/userReducer';\n\nexport default configureStore({\n  reducer: {\n    posts: postReducer,\n    user: userReducer,\n  },\n});\n","/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}